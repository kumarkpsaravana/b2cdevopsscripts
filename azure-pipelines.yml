# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  paths:
    include:
      - /cgadmin-policies
pool:
  vmImage: ubuntu-latest

stages:
- stage: Publish
  jobs:
  - job: Build
    pool:
        vmImage: ubuntu-latest
    steps:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Deployment Scripts'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/scripts'
        artifact: scripts
        publishLocation: 'pipeline'
        
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Deployment Scripts'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/cgadmin-policies'
        artifact: 'src'
        publishLocation: 'pipeline'
- stage: 'local'
  dependsOn: Publish
  jobs:
  - deployment: Deploy
    variables:
      - group: B2C-Admin-Local
      - name: environment
        value: local
    pool:
      vmImage: ubuntu-latest
    environment: local
    strategy:
      runOnce:
        deploy:
          steps:
            - task: PowerShell@2
              displayName: 'TrustFrameworkBase'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_TrustFrameworkBase -PathToFile TrustFrameworkBase.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'TrustFrameworkExtensions'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_TrustFrameworkExtensions -PathToFile TrustFrameworkExtensions.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'Signin'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_signin -PathToFile Signin.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'SignupWithInvitation'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_signupwithinvitation -PathToFile SignupWithInvitation.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'ProfileEdit'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_ProfileEdit -PathToFile ProfileEdit.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'PasswordReset'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_PasswordReset -PathToFile PasswordReset.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
- stage: 'development'
  dependsOn: local
  jobs:
  - deployment: Deploy
    variables:
      - group: B2C-Admin-Development
      - name: environment
        value: development
    pool:
      vmImage: ubuntu-latest
    environment: development
    strategy:
      runOnce:
        deploy:
          steps:
            - task: PowerShell@2
              displayName: 'TrustFrameworkBase'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_TrustFrameworkBase -PathToFile TrustFrameworkBase.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'TrustFrameworkExtensions'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_TrustFrameworkExtensions -PathToFile TrustFrameworkExtensions.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'Signin'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_signin -PathToFile Signin.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'SignupWithInvitation'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_signupwithinvitation -PathToFile SignupWithInvitation.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'ProfileEdit'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_ProfileEdit -PathToFile ProfileEdit.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"
            - task: PowerShell@2
              displayName: 'PasswordReset'
              inputs:
                filePath: '$(Pipeline.Workspace)/scripts/deploymentscript.ps1'
                arguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_PasswordReset -PathToFile PasswordReset.xml"
                workingDirectory: "$(Pipeline.Workspace)/src"